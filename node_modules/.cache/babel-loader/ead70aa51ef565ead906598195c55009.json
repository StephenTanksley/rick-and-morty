{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Container, Counter, Button } from '../Styles/Styles';\nimport CharacterCard from './CharacterCard';\nimport NavGunLeft from '../Images/transparentportalgun-rotatedLeft.png';\nimport NavGunRight from '../Images/transparentportalgun-rotatedRight.png';\nexport const CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        totalPages = _useState4[0],\n        setTotalPages = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1]; //I'm setting my page data here.\n  //  setPreferredPage ---- > input field ---- (onSubmit) ---- setCurrentPage(formValue) ---- dependency array(currentPage)\n\n\n  useEffect(() => {\n    axios.get(\"https://rickandmortyapi.com/api/character/?page=\".concat(currentPage)).then(response => {\n      console.log(response.data);\n      setCharacters(response.data.results);\n      setTotalPages(response.data.info.pages);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [currentPage]); // console.log(currentPage)\n\n  console.log(characters);\n  console.log(totalPages);\n\n  const PageBack = () => currentPage > 1 && currentPage <= totalPages + 1 ? setCurrentPage(currentPage - 1) : alert('Not a valid universe!');\n\n  const PageForward = () => currentPage >= 1 && currentPage < totalPages ? setCurrentPage(currentPage + 1) : alert('Not a valid universe!');\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Characters!\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: NavGunLeft,\n    onClick: PageBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Page \", currentPage, \" of \", totalPages, \" \"), React.createElement(\"img\", {\n    className: \"mouseover\",\n    src: NavGunRight,\n    onClick: PageForward,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", characters.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(CharacterCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js"],"names":["React","useEffect","useState","axios","Container","Counter","Button","CharacterCard","NavGunLeft","NavGunRight","CharacterList","characters","setCharacters","totalPages","setTotalPages","currentPage","setCurrentPage","get","then","response","console","log","data","results","info","pages","catch","error","PageBack","alert","PageForward","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {Container, Counter, Button} from '../Styles/Styles'\nimport CharacterCard from './CharacterCard'\nimport NavGunLeft from '../Images/transparentportalgun-rotatedLeft.png'\nimport NavGunRight from '../Images/transparentportalgun-rotatedRight.png'\n\n\n\nexport const  CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const [characters, setCharacters] = useState([])\n  const [totalPages, setTotalPages] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1) //I'm setting my page data here.\n\n\n\n//  setPreferredPage ---- > input field ---- (onSubmit) ---- setCurrentPage(formValue) ---- dependency array(currentPage)\n\n  useEffect(() => {\n    axios.get(`https://rickandmortyapi.com/api/character/?page=${currentPage}`)\n    .then(response => {\n      console.log(response.data)\n      setCharacters(response.data.results)\n      setTotalPages(response.data.info.pages)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [currentPage])\n\n  // console.log(currentPage)\n  console.log(characters);\n  console.log(totalPages)\n\n  const PageBack = () => (currentPage > 1 && currentPage <= totalPages + 1) ? \n  setCurrentPage(currentPage - 1) : alert('Not a valid universe!')\n\n  const PageForward = () => (currentPage >= 1 && currentPage < totalPages) ? \n    setCurrentPage(currentPage + 1) : alert('Not a valid universe!')\n\n\n  return (\n  <div>\n    <Container><h1>Characters!</h1></Container>\n    <Container>\n        <div>\n        <img src={NavGunLeft} onClick={PageBack}/>\n        </div>\n      <Counter> Page {currentPage} of {totalPages} </Counter>\n\n      <img className=\"mouseover\" src={NavGunRight} onClick={PageForward}/>\n      \n\n    </Container>\n\n    <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n      {characters.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n        return (\n        <CharacterCard \n          item = {item}\n          key = {index} />\n          )})}\n    </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}