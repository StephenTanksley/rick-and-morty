{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '../Styles/Styles';\nimport { LocationCard } from './LocationCard';\nexport const LocationsList = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocations = _useState2[1];\n\n  useEffect(() => {\n    console.log(props);\n    axios.get('https://rickandmortyapi.com/api/location/').then(response => {\n      console.log(response);\n      setLocations(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Locations!\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" \", locations.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(LocationCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js"],"names":["React","useState","useEffect","axios","Container","LocationCard","LocationsList","props","locations","setLocations","console","log","get","then","response","data","results","catch","error","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,oBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QAC/BO,SAD+B;AAAA,QACpBC,YADoB;;AAGtCP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAJ,IAAAA,KAAK,CAACS,GAAN,CAAU,2CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAZ;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAPD;AAQD,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACCV,SAAS,CAACW,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AAC7B,WACA,oBAAC,YAAD;AACA,MAAA,IAAI,EAAID,IADR;AAEA,MAAA,GAAG,EAAIC,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAIE,GALL,CADD,CAFJ,CADF;AAYE,CA5BG","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport {Container} from '../Styles/Styles'\nimport {LocationCard} from './LocationCard'\n\nexport const LocationsList = (props) => {\n  const [locations, setLocations] = useState([])\n\n  useEffect(() => {\n    console.log(props);\n\n    axios.get('https://rickandmortyapi.com/api/location/')\n    .then(response => {\n      console.log(response)\n      setLocations(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  return(\n    <div>\n        <Container>Locations!</Container> <br />\n        <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n        {locations.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n            return (\n            <LocationCard \n            item = {item}\n            key = {index} />\n            )})}\n        </Container>\n    </div>\n  )}"]},"metadata":{},"sourceType":"module"}