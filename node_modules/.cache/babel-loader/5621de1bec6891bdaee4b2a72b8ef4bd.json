{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nexport const LocationsList = props => {\n  const _useState = useState([false]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocations = _useState2[1]; //gives us a blank array for putting data into.scss\n  //Locations\n\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/location').then(response => {\n      // console.log(response.data.results)\n      setLocations(response.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(locations);\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js"],"names":["React","useEffect","useState","LocationsList","props","locations","setLocations","axios","get","then","response","data","results","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAY;AAAA,oBACLF,QAAQ,CAAC,CAAC,KAAD,CAAD,CADH;AAAA;AAAA,QAChCG,SADgC;AAAA,QACrBC,YADqB,kBACY;AAEnD;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACC,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB;AACAJ,MAAAA,YAAY,CAACI,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAZ;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD,CAhBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nexport const LocationsList = (props) =>  {\n  const [locations, setLocations] = useState([false])//gives us a blank array for putting data into.scss\n\n  //Locations\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/location')\n    .then(response => {\n      // console.log(response.data.results)\n      setLocations(response.data.results)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  console.log(locations)\n}"]},"metadata":{},"sourceType":"module"}