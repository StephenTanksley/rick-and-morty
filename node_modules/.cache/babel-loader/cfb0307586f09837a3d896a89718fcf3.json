{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Container, Button } from '../Styles/Styles';\nimport CharacterCard from './CharacterCard';\nexport const CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        characterPage = _useState4[0],\n        setCharacterPage = _useState4[1];\n\n  const pageUp = () => {\n    setCharacterPage(characterPage++);\n    console.log(characterPage);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://rickandmortyapi.com/api/character/\").then(response => {\n      console.log(response);\n      setCharacters(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [characterPage]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Characters!\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(Button, {\n    onClick: pageUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Next\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" \", characters.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(CharacterCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js"],"names":["React","useEffect","useState","axios","Container","Button","CharacterCard","CharacterList","characters","setCharacters","characterPage","setCharacterPage","pageUp","console","log","get","then","response","data","results","catch","error","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,kBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,OAAO,MAAOC,aAAa,GAAG,MAAM;AAClC;AADkC,oBAEEL,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAE3BM,UAF2B;AAAA,QAEfC,aAFe;;AAAA,qBAGQP,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAG3BQ,aAH2B;AAAA,QAGZC,gBAHY;;AAMlC,QAAMC,MAAM,GAAG,MAAM;AACnBD,IAAAA,gBAAgB,CAACD,aAAa,EAAd,CAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD,GAHD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACY,GAAN,+CACCC,IADD,CACMC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAR,MAAAA,aAAa,CAACQ,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAPD;AAQD,GATQ,EASN,CAACX,aAAD,CATM,CAAT;AAWA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAFF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGJ,UAAU,CAACc,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AAChC,WACA,oBAAC,aAAD;AACE,MAAA,IAAI,EAAID,IADV;AAEE,MAAA,GAAG,EAAIC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALL,CADH,CAVF,CADA;AAqBD,CA5CM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {Container, Button} from '../Styles/Styles'\nimport CharacterCard from './CharacterCard'\n\n\n\nexport const  CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const [characters, setCharacters] = useState([])\n  const [characterPage, setCharacterPage] = useState([])\n\n\n  const pageUp = () => {\n    setCharacterPage(characterPage++)\n    console.log(characterPage)\n  }\n\n\n  useEffect(() => {\n    axios.get(`https://rickandmortyapi.com/api/character/`)\n    .then(response => {\n      console.log(response)\n      setCharacters(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [characterPage])\n\n  return (\n  <div>\n    <Container><h1>Characters!</h1></Container>\n    <Container>\n      <Button>Previous\n      </Button>\n      \n      <Button onClick={pageUp} >Next\n      </Button>\n    </Container>\n\n    <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n      {characters.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n        return (\n        <CharacterCard \n          item = {item}\n          key = {index} />\n          )})}\n    </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}