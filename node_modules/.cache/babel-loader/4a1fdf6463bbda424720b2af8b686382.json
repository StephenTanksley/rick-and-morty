{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport CharacterCard from './CharacterCard';\nexport const CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  useEffect(() => {\n    console.log(props);\n    axios.get('https://rickandmortyapi.com/api/character/').then(response => {\n      console.log(response);\n      setEpisodes(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"character-list grid-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"TODO: `array.map()` over your state here!\"), React.createElement(CharacterCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js"],"names":["React","useEffect","useState","CharacterCard","CharacterList","characters","setCharacters","console","log","props","axios","get","then","response","setEpisodes","data","results","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAOC,aAAa,GAAG,MAAM;AAClC;AADkC,oBAEEF,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAE3BG,UAF2B;AAAA,QAEfC,aAFe;;AAIlCL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEAC,IAAAA,KAAK,CAACC,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAC,MAAAA,WAAW,CAACD,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAX;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAPD;AAQD,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAvBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CharacterCard from './CharacterCard'\n\nexport const  CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const [characters, setCharacters] = useState([])\n\n  useEffect(() => {\n    console.log(props);\n\n    axios.get('https://rickandmortyapi.com/api/character/')\n    .then(response => {\n      console.log(response)\n      setEpisodes(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  return (\n    <section className=\"character-list grid-view\">\n      <h2>TODO: `array.map()` over your state here!</h2>\n      <CharacterCard />\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}