{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Container } from '../Styles/Styles';\nimport { CharacterCard } from './CharacterCard';\nexport const CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/character/').then(response => {\n      console.log(response);\n      setEpisodes(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", characters.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(CharacterCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js"],"names":["React","useEffect","useState","axios","Container","CharacterCard","CharacterList","characters","setCharacters","get","then","response","console","log","setEpisodes","data","results","catch","error","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,OAAO,MAAOC,aAAa,GAAG,MAAM;AAClC;AADkC,oBAEEJ,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAE3BK,UAF2B;AAAA,QAEfC,aAFe;;AAIlCP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACM,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,MAAAA,WAAW,CAACH,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAX;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGX,UAAU,CAACY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AAChC,WACA,oBAAC,aAAD;AACE,MAAA,IAAI,EAAID,IADV;AAEE,MAAA,GAAG,EAAIC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALL,CADH,CADF;AAUD,CAzBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {Container} from '../Styles/Styles'\nimport {CharacterCard} from './CharacterCard'\n\nexport const  CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const [characters, setCharacters] = useState([])\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/character/')\n    .then(response => {\n      console.log(response)\n      setEpisodes(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  return (\n    <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n      {characters.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n        return (\n        <CharacterCard \n          item = {item}\n          key = {index} />\n          )})}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}