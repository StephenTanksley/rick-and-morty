{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    width: 80%;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-around;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { EpisodeCard } from '../Episodes/EpisodeCard';\nconst CardContainer = styled.div(_templateObject());\nexport const EpisodeList = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        episodes = _useState2[0],\n        setEpisodes = _useState2[1]; //gives us a blank array for putting data into.\n  //Episodes\n\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/episode').then(response => {\n      // console.log(response.data.results)\n      setEpisodes(response.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(episodes); // console.log(props)\n\n  console.log(props);\n  return (//STEP 7 - This is where I'm using my map.\n    React.createElement(CardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" \", episodes.map((item, index) => {\n      //Doesn't run the map function until we get data back from the API.\n      return React.createElement(EpisodeCard, {\n        item: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }))\n  );\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js"],"names":["React","useEffect","useState","styled","EpisodeCard","CardContainer","div","EpisodeList","props","episodes","setEpisodes","axios","get","then","response","data","results","catch","err","console","log","map","item","index"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAV,mBAAnB;AASA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAY;AAAA,oBACLN,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QAC9BO,QAD8B;AAAA,QACpBC,WADoB,kBACO;AAE7C;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,KAAK,CAACC,GAAN,CAAU,yCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB;AACAJ,MAAAA,WAAW,CAACI,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAX;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPD;AAQD,GATS,EASP,EATO,CAAT;AAWDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ,EAfuC,CAgBvC;;AAGAU,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEE,SACM;AACA,wBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACKC,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AACxB,aACA,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAID,IAArB;AACM,QAAA,GAAG,EAAIC,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKP,KANA,CADL;AAFN;AAYD,CAjCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components'\nimport {EpisodeCard} from '../Episodes/EpisodeCard'\n\nconst CardContainer = styled.div `\n    margin: 0 auto;\n    width: 80%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`\n\nexport const EpisodeList = (props) =>  {\n  const [episodes, setEpisodes] = useState([])//gives us a blank array for putting data into.\n\n //Episodes\n useEffect(() => {\n  axios.get('https://rickandmortyapi.com/api/episode')\n  .then(response => {\n    // console.log(response.data.results)\n    setEpisodes(response.data.results)\n  })\n  .catch(err => {\n    console.log(err)\n  })\n}, [])\n\nconsole.log(episodes)\n// console.log(props)\n\n\nconsole.log(props)\n\n  return (\n        //STEP 7 - This is where I'm using my map.\n        <CardContainer> {/*This is just the place where I'm getting to pass in value for my props.*/}\n            {episodes.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n                    return (\n                    <EpisodeCard item = {item}\n                          key = {index}\n                        />\n                )\n            })}\n        </CardContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}