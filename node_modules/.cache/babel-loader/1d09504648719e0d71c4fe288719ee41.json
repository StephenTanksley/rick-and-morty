{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '../Styles/Styles';\nimport { LocationCard } from './LocationCard';\nimport NavGunLeft from '../Images/transparentportalgun-rotatedLeft.png';\nimport NavGunRight from '../Images/transparentportalgun-rotatedRight.png';\nexport const LocationsList = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocations = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        totalPages = _useState4[0],\n        setTotalPages = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  useEffect(() => {\n    console.log(props);\n    axios.get('https://rickandmortyapi.com/api/location/').then(response => {\n      console.log(response);\n      setLocations(response.data.results);\n      setTotalPages(response.data.info.pages);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const PageBack = () => currentPage > 1 && currentPage <= totalPages + 1 ? setCurrentPage(currentPage - 1) : alert('Not a valid universe!');\n\n  const PageForward = () => currentPage >= 1 && currentPage < totalPages ? setCurrentPage(currentPage + 1) : alert('Not a valid universe!');\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Locations!\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mouseover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: NavGunLeft,\n    onClick: PageBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Page \", currentPage, \" of \", totalPages, \" \"), React.createElement(\"div\", {\n    className: \"mouseover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"mouseover\",\n    src: NavGunRight,\n    onClick: PageForward,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", locations.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(LocationCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js"],"names":["React","useState","useEffect","axios","Container","LocationCard","NavGunLeft","NavGunRight","LocationsList","props","locations","setLocations","totalPages","setTotalPages","currentPage","setCurrentPage","console","log","get","then","response","data","results","info","pages","catch","error","PageBack","alert","PageForward","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport {Container} from '../Styles/Styles'\nimport {LocationCard} from './LocationCard'\nimport NavGunLeft from '../Images/transparentportalgun-rotatedLeft.png'\nimport NavGunRight from '../Images/transparentportalgun-rotatedRight.png'\n\nexport const LocationsList = (props) => {\n  const [locations, setLocations] = useState([])\n  const [totalPages, setTotalPages] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  useEffect(() => {\n    console.log(props);\n\n    axios.get('https://rickandmortyapi.com/api/location/')\n    .then(response => {\n      console.log(response)\n      setLocations(response.data.results)\n      setTotalPages(response.data.info.pages)\n\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  const PageBack = () => (currentPage > 1 && currentPage <= totalPages + 1) ? \n  setCurrentPage(currentPage - 1) : alert('Not a valid universe!')\n\n\n  const PageForward = () => (currentPage >= 1 && currentPage < totalPages) ? \n    setCurrentPage(currentPage + 1) : alert('Not a valid universe!')\n\n  return(\n    <div>\n        <Container><h1>Locations!</h1></Container>\n\n        <Container>\n          <div className=\"mouseover\">\n            <img src={NavGunLeft} onClick={PageBack}/>\n          </div>\n        <Counter> Page {currentPage} of {totalPages} </Counter>\n\n        <div className=\"mouseover\">\n          <img className=\"mouseover\" src={NavGunRight} onClick={PageForward}/>\n        </div>\n\n\n\n      </Container>\n        <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n        {locations.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n            return (\n            <LocationCard \n            item = {item}\n            key = {index} />\n            )})}\n        </Container>\n    </div>\n  )}"]},"metadata":{},"sourceType":"module"}