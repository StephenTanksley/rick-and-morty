{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '../Styles/Styles';\nimport { EpisodeCard } from './EpisodeCard';\nexport const EpisodeList = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        episodes = _useState2[0],\n        setEpisodes = _useState2[1];\n\n  useEffect(() => {\n    console.log(props);\n    axios.get('https://rickandmortyapi.com/api/episode/').then(response => {\n      console.log(response);\n      setEpisodes(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Locations!\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" \", episodes.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(EpisodeCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js"],"names":["React","useState","useEffect","axios","Container","EpisodeCard","EpisodeList","props","episodes","setEpisodes","console","log","get","then","response","data","results","catch","error","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,oBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QAC7BO,QAD6B;AAAA,QACnBC,WADmB;;AAGpCP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAJ,IAAAA,KAAK,CAACS,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAL,MAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAX;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAPD;AAQD,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,CADI,EAIA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGV,QAAQ,CAACW,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AAC9B,WACA,oBAAC,WAAD;AACE,MAAA,IAAI,EAAID,IADV;AAEE,MAAA,GAAG,EAAIC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALL,CADH,CAJA,CADF;AAcE,CA9BG","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport {Container} from '../Styles/Styles'\nimport {EpisodeCard} from './EpisodeCard'\n\nexport const EpisodeList = (props) => {\n  const [episodes, setEpisodes] = useState([])\n\n  useEffect(() => {\n    console.log(props);\n\n    axios.get('https://rickandmortyapi.com/api/episode/')\n    .then(response => {\n      console.log(response)\n      setEpisodes(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  return(\n    <div>\n<Container><h1>Locations!</h1></Container>\n\n   \n    <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n      {episodes.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n        return (\n        <EpisodeCard \n          item = {item}\n          key = {index} />\n          )})}\n    </Container>\n    </div>\n  )}"]},"metadata":{},"sourceType":"module"}