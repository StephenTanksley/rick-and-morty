{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport TabNav from \"./components/TabNav.js\";\nimport Header from \"./components/Header.js\";\nimport { Card, Image } from 'semantic-ui-react';\nimport { WelcomePage } from './components/WelcomePage.js';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport axios from 'axios';\nexport default function App() {\n  const _useState = useState([false]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1]; //just gives us a blank boolean saying we don't have any data here.\n\n\n  const _useState3 = useState([false]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        locations = _useState4[0],\n        setLocations = _useState4[1]; //gives us a blank array for putting data into.scss\n\n\n  const _useState5 = useState([false]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        episodes = _useState6[0],\n        setEpisodes = _useState6[1]; //gives us a blank array for putting data into.\n\n\n  console.log(characters);\n  console.log(locations);\n  console.log(episodes);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"nav-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Home\")), React.createElement(Button, {\n    className: \"nav-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Characters\")), React.createElement(Button, {\n    className: \"nav-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/locations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Locations\")), React.createElement(Button, {\n    className: \"nav-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/episodes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Episodes\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/characters\",\n    render: props => React.createElement(Characters, Object.assign({}, props, {\n      characters: characters,\n      setCharacters: setCharacters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/locations\",\n    render: props => React.createElement(Locations, Object.assign({}, props, {\n      locations: locations,\n      setLocations: setLocations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/episodes\",\n    render: props => React.createElement(Episodes, Object.assign({}, props, {\n      episodes: episodes,\n      setEpisodes: setEpisodes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/App.js"],"names":["React","useState","useEffect","TabNav","Header","Card","Image","WelcomePage","BrowserRouter","Router","Route","Link","Button","axios","App","characters","setCharacters","locations","setLocations","episodes","setEpisodes","console","log","Home","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport TabNav from \"./components/TabNav.js\";\nimport Header from \"./components/Header.js\";\nimport { Card, Image } from 'semantic-ui-react'\nimport {WelcomePage} from './components/WelcomePage.js'\n\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport {Button} from 'reactstrap'\nimport axios from 'axios'\n\n\n\n\nexport default function App() {\n\n  const [characters, setCharacters] = useState([false])//just gives us a blank boolean saying we don't have any data here.\n  const [locations, setLocations] = useState([false])//gives us a blank array for putting data into.scss\n  const [episodes, setEpisodes] = useState([false])//gives us a blank array for putting data into.\n  \n \n\n\n\nconsole.log(characters)\nconsole.log(locations)\nconsole.log(episodes)\n\n\n\n  return (\n    <div className=\"App\">\n    {/*Rendering our path to the home component. The route tells our program what components are going to render.*/}\n      <nav>\n        <Button className=\"nav-button\">\n          <Link to=\"/\">Home</Link>\n        </Button>\n\n        <Button className=\"nav-button\">\n          <Link to=\"/characters\">Characters</Link>\n        </Button>\n        \n        <Button className=\"nav-button\">\n          <Link to=\"/locations\">Locations</Link>\n        </Button>\n\n        <Button className=\"nav-button\">\n          <Link to=\"/episodes\">Episodes</Link>\n        </Button>\n      </nav>\n   <br />\n    <Route exact path=\"/\" component={Home} />\n    <Route \n      path=\"/characters\" \n      render={(props) => <Characters \n                          {...props} \n                          characters={characters}\n                          setCharacters={setCharacters} />} />\n    \n    <Route \n      path=\"/locations\" \n      render={(props) => <Locations \n                          {...props} \n                          locations={locations}\n                          setLocations={setLocations} />} />\n    \n    <Route \n      path=\"/episodes\" \n      render={(props) => <Episodes \n                          {...props} \n                          episodes={episodes}\n                          setEpisodes={setEpisodes}/>} />\n      \n\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}