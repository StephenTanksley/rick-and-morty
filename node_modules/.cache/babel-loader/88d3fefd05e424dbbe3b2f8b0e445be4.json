{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    width: 80%;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-around;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { LocationCard } from './LocationCard';\nimport styled from 'styled-components';\nconst CardContainer = styled.div(_templateObject());\nexport const LocationsList = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocations = _useState2[1]; //gives us a blank array for putting data into.scss\n  //Locations\n\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/location').then(response => {\n      // console.log(response.data.results)\n      setLocations(response.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(locations); // console.log(props)\n\n  return (//STEP 7 - This is where I'm using my map.\n    React.createElement(CardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", locations.map((item, index) => {\n      //Doesn't run the map function until we get data back from the API.\n      return React.createElement(LocationCard, {\n        item: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }))\n  );\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Locations/LocationsList.js"],"names":["React","useEffect","useState","axios","LocationCard","styled","CardContainer","div","LocationsList","props","locations","setLocations","get","then","response","data","results","catch","err","console","log","map","item","index"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAMA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AASA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAY;AAAA,oBACLP,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QAChCQ,SADgC;AAAA,QACrBC,YADqB,kBACO;AAE5C;;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACS,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB;AACAH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAZ;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ,EAfqC,CAgBrC;;AAIA,SACE;AACA,wBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACKA,SAAS,CAACW,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AACzB,aACA,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAID,IAAtB;AACM,QAAA,GAAG,EAAIC,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKP,KANA,CADL;AAFF;AAYH,CAhCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {LocationCard} from './LocationCard'\nimport styled from 'styled-components'\n\n\n\n\n\nconst CardContainer = styled.div `\n    margin: 0 auto;\n    width: 80%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`\n\nexport const LocationsList = (props) =>  {\n  const [locations, setLocations] = useState([])//gives us a blank array for putting data into.scss\n\n    //Locations\n    useEffect(() => {\n      axios.get('https://rickandmortyapi.com/api/location')\n      .then(response => {\n        // console.log(response.data.results)\n        setLocations(response.data.results)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }, [])\n\n    console.log(locations)\n    // console.log(props)\n\n\n\n    return (\n      //STEP 7 - This is where I'm using my map.\n      <CardContainer> {/*This is just the place where I'm getting to pass in value for my props.*/}\n          {locations.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n                  return (\n                  <LocationCard item = {item}\n                        key = {index}\n                      />\n              )\n          })}\n      </CardContainer>\n);\n}"]},"metadata":{},"sourceType":"module"}