{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    list-style-type: none;\\n    justify-content: center;\\n    text-align: center;\\n    margin: 0 auto;\\n    border: 0;\\n    padding: 0;\\n    color: white;\\n    font-size: 1.2rem;\\n    line-height: 1.5rem;\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    list-style-type: none;\\n    justify-content: center;\\n    text-align: center;\\n    margin: 0 auto;\\n    margin: 0 auto;\\n    border: 0;\\n    padding: 0;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    width: 80%;\\n    display: flex;\\n    justify-content: space-around;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { EpisodeCard } from '../Episodes/EpisodeCard';\nconst CardContainer = styled.div(_templateObject());\nconst ListHeading = styled.ul(_templateObject2());\nconst List = styled.p(_templateObject3());\nexport const EpisodeList = props => {\n  console.log(props);\n  return (//STEP 7 - This is where I'm using my map.\n    React.createElement(EpisodeList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", props.data && props.data.map((item, index) => {\n      //Doesn't run the map function until we get data back from the API.\n      return React.createElement(EpisodeList, {\n        episode: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }))\n  );\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js"],"names":["React","useEffect","useState","styled","EpisodeCard","CardContainer","div","ListHeading","ul","List","p","EpisodeList","props","console","log","data","map","item","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAV,mBAAnB;AAQA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,EAAV,oBAAjB;AAWA,MAAMC,IAAI,GAAGN,MAAM,CAACO,CAAV,oBAAV;AAaA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAY;AAGnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,SAEM;AACA,wBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACKA,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AACxC,aACA,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAID,IAAxB;AACM,QAAA,GAAG,EAAIC,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKP,KANc,CADnB;AAHN;AAaD,CAjBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components'\nimport {EpisodeCard} from '../Episodes/EpisodeCard'\n\nconst CardContainer = styled.div `\n    margin: 0 auto;\n    width: 80%;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`\n\nconst ListHeading = styled.ul`\n\n    list-style-type: none;\n    justify-content: center;\n    text-align: center;\n    margin: 0 auto;\n    margin: 0 auto;\n    border: 0;\n    padding: 0;\n`\n\nconst List = styled.p `\n    list-style-type: none;\n    justify-content: center;\n    text-align: center;\n    margin: 0 auto;\n    border: 0;\n    padding: 0;\n    color: white;\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n\n`\n\nexport const EpisodeList = (props) =>  {\n\n\n    console.log(props)\n  return (\n\n        //STEP 7 - This is where I'm using my map.\n        <EpisodeList> {/*This is just the place where I'm getting to pass in value for my props.*/}\n            {props.data && props.data.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n                    return (\n                    <EpisodeList episode = {item}\n                          key = {index}\n                        />\n                )\n            })}\n        </EpisodeList>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}