{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    list-style-type: none;\\n    justify-content: center;\\n    text-align: center;\\n    margin: 0 auto;\\n    border: 0;\\n    padding: 0;\\n    color: white;\\n    font-size: 1.2rem;\\n    line-height: 1.5rem;\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    list-style-type: none;\\n    justify-content: center;\\n    text-align: center;\\n    margin: 0 auto;\\n    margin: 0 auto;\\n    border: 0;\\n    padding: 0;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    width: 80%;\\n    display: flex;\\n    justify-content: space-around;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nconst CardContainer = styled.div(_templateObject());\nconst ListHeading = styled.ul(_templateObject2());\nconst List = styled.p(_templateObject3());\nexport const EpisodeList = props => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([false]),\n        _useState2 = _slicedToArray(_useState, 2),\n        episodes = _useState2[0],\n        setEpisodes = _useState2[1]; //gives us a blank array for putting data into.\n  //Episodes\n\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/episode').then(response => {\n      // console.log(response.data.results)\n      setEpisodes(response.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(episodes);\n  return React.createElement(CardContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" \", React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Name: \", episodes.name), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Episode: \", episodes.episode)));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Episodes/EpisodeList.js"],"names":["React","useEffect","useState","axios","styled","CardContainer","div","ListHeading","ul","List","p","EpisodeList","props","episodes","setEpisodes","get","then","response","data","results","catch","err","console","log","name","episode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AAQA,MAAMC,WAAW,GAAGH,MAAM,CAACI,EAAV,oBAAjB;AAWA,MAAMC,IAAI,GAAGL,MAAM,CAACM,CAAV,oBAAV;AAaA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAY;AACrC;AADqC,oBAELV,QAAQ,CAAC,CAAC,KAAD,CAAD,CAFH;AAAA;AAAA,QAE9BW,QAF8B;AAAA,QAEpBC,WAFoB,kBAEY;AAEjD;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACY,GAAN,CAAU,yCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB;AACAH,MAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAX;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWFC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACE,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,QAAQ,CAACW,IAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcX,QAAQ,CAACY,OAAvB,CAFA,CADF,CADJ;AAeD,CAhCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nconst CardContainer = styled.div `\n    margin: 0 auto;\n    width: 80%;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`\n\nconst ListHeading = styled.ul`\n\n    list-style-type: none;\n    justify-content: center;\n    text-align: center;\n    margin: 0 auto;\n    margin: 0 auto;\n    border: 0;\n    padding: 0;\n`\n\nconst List = styled.p `\n    list-style-type: none;\n    justify-content: center;\n    text-align: center;\n    margin: 0 auto;\n    border: 0;\n    padding: 0;\n    color: white;\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n\n`\n\nexport const EpisodeList = (props) =>  {\n  // TODO: Add useState to track data from useEffect\n  const [episodes, setEpisodes] = useState([false])//gives us a blank array for putting data into.\n\n  //Episodes\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/episode')\n    .then(response => {\n      // console.log(response.data.results)\n      setEpisodes(response.data.results)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }, [])\n\nconsole.log(episodes)\n  return (\n      <CardContainer> {\n        <>\n        <h2>Name: {episodes.name}</h2>\n        <h4>Episode: {episodes.episode}</h4>\n\n\n\n\n\n\n        </>\n      }\n      </CardContainer>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}