{"ast":null,"code":"import _slicedToArray from \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Container, Button } from '../Styles/Styles';\nimport CharacterCard from './CharacterCard';\nexport const CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        characterPage = _useState4[0],\n        setCharacterPage = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1]; // let pageUp = () => {\n  //   if(characterPage >= 1 && characterPage <= page.length -1){\n  //     setCharacterPage(characterPage++)\n  // }\n  //   console.log(characterPage)\n  // }\n  //   let pageDown = () => {\n  //     if(characterPage > 1 && characterPage <= response.info.pages.length){\n  // \t\tsetCharacterPage(characterPage--)\n  // }\n  // const pageDisplay = () => {\n  //   setCharacterPage(userInput)\n  // }\n\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/character/').then(response => {\n      setCharacters(response.data.results);\n      setCharacterPage(response.data.info);\n      console.log(characters);\n      console.log(characterPage);\n      console.log(currentPage);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Characters!\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Next\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", characters.map((item, index) => {\n    //Doesn't run the map function until we get data back from the API.\n    return React.createElement(CharacterCard, {\n      item: item,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/stephentanksley/User-Interface/Sprint-Challenge-Single-Page-Apps/src/components/Characters/CharacterList.js"],"names":["React","useEffect","useState","axios","Container","Button","CharacterCard","CharacterList","characters","setCharacters","characterPage","setCharacterPage","currentPage","setCurrentPage","get","then","response","data","results","info","console","log","catch","error","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,kBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,OAAO,MAAOC,aAAa,GAAG,MAAM;AAClC;AADkC,oBAEEL,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAE3BM,UAF2B;AAAA,QAEfC,aAFe;;AAAA,qBAGQP,QAAQ,EAHhB;AAAA;AAAA,QAG3BQ,aAH2B;AAAA,QAGZC,gBAHY;;AAAA,qBAIIT,QAAQ,EAJZ;AAAA;AAAA,QAI3BU,WAJ2B;AAAA,QAIdC,cAJc,kBAOlC;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AAIE;AACA;AACA;;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACW,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBP,MAAAA,aAAa,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACAP,MAAAA,gBAAgB,CAACK,QAAQ,CAACC,IAAT,CAAcE,IAAf,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACD,KAPD,EAQCU,KARD,CAQOC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CAFF,EAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGf,UAAU,CAACgB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC;AAChC,WACA,oBAAC,aAAD;AACE,MAAA,IAAI,EAAID,IADV;AAEE,MAAA,GAAG,EAAIC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALL,CADH,CAZF,CADA;AAuBD,CA9DM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {Container, Button} from '../Styles/Styles'\nimport CharacterCard from './CharacterCard'\n\n\n\nexport const  CharacterList = () => {\n  // TODO: Add useState to track data from useEffect\n  const [characters, setCharacters] = useState([])\n  const [characterPage, setCharacterPage] = useState()\n  const [currentPage, setCurrentPage] = useState()\n\n\n  // let pageUp = () => {\n  //   if(characterPage >= 1 && characterPage <= page.length -1){\n  //     setCharacterPage(characterPage++)\n  // }\n  //   console.log(characterPage)\n  // }\n\n//   let pageDown = () => {\n//     if(characterPage > 1 && characterPage <= response.info.pages.length){\n// \t\tsetCharacterPage(characterPage--)\n// }\n\n\n\n  // const pageDisplay = () => {\n  //   setCharacterPage(userInput)\n  // }\n\n  useEffect(() => {\n    axios.get('https://rickandmortyapi.com/api/character/')\n    .then(response => {\n      setCharacters(response.data.results)\n      setCharacterPage(response.data.info)\n      console.log(characters)\n      console.log(characterPage)\n      console.log(currentPage)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }, [])\n\n  return (\n  <div>\n    <Container><h1>Characters!</h1></Container>\n    <Container>\n      <Button>Previous\n      </Button>\n      \n      {/* onClick={pageUp} */}\n\n      <Button >Next\n      </Button>\n    </Container>\n\n    <Container> {/*This is just the place where I'm getting to pass in value for my props.*/}\n      {characters.map((item, index) => {//Doesn't run the map function until we get data back from the API.\n        return (\n        <CharacterCard \n          item = {item}\n          key = {index} />\n          )})}\n    </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}